@model test_SFF.MovieStudio

@{
    ViewData["Title"] = "Edit";
    var movie = ViewData["Movie"] as Movie;
    var studio = ViewData["Studio"] as Studio;
}

<h1>Return Movie</h1>

<h4>Movie: @movie.Name</h4>
<h4>Physical copy: @movie.PhysicalCopy</h4>
<h4>Studio: @studio.Name</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            @* <div class="form-group">
                <label asp-for="MovieId" class="control-label"></label>
                <select asp-for="MovieId" class="form-control" asp-items="ViewBag.MovieId"></select>
                <span asp-validation-for="MovieId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudioId" class="control-label"></label>
                <select asp-for="StudioId" class="form-control" asp-items="ViewBag.StudioId"></select>
                <span asp-validation-for="StudioId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReturnDate" class="control-label"></label>
                <input asp-for="ReturnDate" class="form-control" />
                <span asp-validation-for="ReturnDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Returned" /> @Html.DisplayNameFor(model => model.Returned)
                </label>
            </div> *@
            <div class="form-group">
                <input type="submit" value="Return movie" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="StudiosControllerView" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
